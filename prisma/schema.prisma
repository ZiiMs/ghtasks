// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

enum Type {
    TODO
    NOTE
}

enum Priority {
    LOW    @map("Low Priority")
    MEDIUM @map("Medium Priority")
    HIGH   @map("High Priority")
}

enum Status {
    OPEN        @map("Open")
    CLOSED      @map("Closed")
    BUG         @map("Bug")
    ENHANCEMENT @map("Enhancement")
    INVALID     @map("Invalid")
    QUESTION    @map("Question")
    INPROGRESS  @map("In Progress")
    NOTSTARTED  @map("Not Started")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Project       Project[]
}

model Project {
    id          Int           @id @default(autoincrement())
    name        String
    repoId      Int           @unique
    description String?
    Users       User[]
    Assignments Assignments[]
}

model Assignments {
    id          Int      @id @default(autoincrement())
    name        String
    description String?
    status      Status   @default(OPEN)
    statusColor String   @default("stone-100")
    type        Type     @default(TODO)
    priority    Priority @default(LOW)
    completed   Boolean  @default(false)
    Project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId   Int
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
